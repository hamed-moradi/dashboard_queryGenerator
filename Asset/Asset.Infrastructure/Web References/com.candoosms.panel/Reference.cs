//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Asset.Infrastructure.com.candoosms.panel {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SMS APIBinding", Namespace="urn:SMSAPIwsdl")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(DeliveryResult))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ReceiveResult))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SendResult))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(MultipleSendResult))]
    public partial class SMSAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViewReceiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeliveryReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcknowledgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatuses_OriginalIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback BalanceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SMSAPI() {
            this.Url = global::Asset.Infrastructure.Properties.Settings.Default.Asset_Infrastructure_com_candoosms_panel_SMS_API;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendMultipleCompletedEventHandler SendMultipleCompleted;
        
        /// <remarks/>
        public event SendCompletedEventHandler SendCompleted;
        
        /// <remarks/>
        public event ViewReceiveCompletedEventHandler ViewReceiveCompleted;
        
        /// <remarks/>
        public event DeliveryReportCompletedEventHandler DeliveryReportCompleted;
        
        /// <remarks/>
        public event getStatusesCompletedEventHandler getStatusesCompleted;
        
        /// <remarks/>
        public event AcknowledgeCompletedEventHandler AcknowledgeCompleted;
        
        /// <remarks/>
        public event getStatuses_OriginalIDCompletedEventHandler getStatuses_OriginalIDCompleted;
        
        /// <remarks/>
        public event BalanceCompletedEventHandler BalanceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:SMSAPIwsdl#Send", RequestNamespace="urn:SMSAPIwsdl", ResponseNamespace="urn:SMSAPIwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public MultipleSendResult[] SendMultiple(string username, string password, string[] srcNumbers, string[] bodys, string[] destNos, string[] flashs, long[] checkingMessageIds) {
            object[] results = this.Invoke("SendMultiple", new object[] {
                        username,
                        password,
                        srcNumbers,
                        bodys,
                        destNos,
                        flashs,
                        checkingMessageIds});
            return ((MultipleSendResult[])(results[0]));
        }
        
        /// <remarks/>
        public void SendMultipleAsync(string username, string password, string[] srcNumbers, string[] bodys, string[] destNos, string[] flashs, long[] checkingMessageIds) {
            this.SendMultipleAsync(username, password, srcNumbers, bodys, destNos, flashs, checkingMessageIds, null);
        }
        
        /// <remarks/>
        public void SendMultipleAsync(string username, string password, string[] srcNumbers, string[] bodys, string[] destNos, string[] flashs, long[] checkingMessageIds, object userState) {
            if ((this.SendMultipleOperationCompleted == null)) {
                this.SendMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMultipleOperationCompleted);
            }
            this.InvokeAsync("SendMultiple", new object[] {
                        username,
                        password,
                        srcNumbers,
                        bodys,
                        destNos,
                        flashs,
                        checkingMessageIds}, this.SendMultipleOperationCompleted, userState);
        }
        
        private void OnSendMultipleOperationCompleted(object arg) {
            if ((this.SendMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMultipleCompleted(this, new SendMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:SMSAPIwsdl#Send", RequestNamespace="urn:SMSAPIwsdl", ResponseNamespace="urn:SMSAPIwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public SendResult[] Send(string username, string password, string srcNumber, string body, string[] destNo, string flash) {
            object[] results = this.Invoke("Send", new object[] {
                        username,
                        password,
                        srcNumber,
                        body,
                        destNo,
                        flash});
            return ((SendResult[])(results[0]));
        }
        
        /// <remarks/>
        public void SendAsync(string username, string password, string srcNumber, string body, string[] destNo, string flash) {
            this.SendAsync(username, password, srcNumber, body, destNo, flash, null);
        }
        
        /// <remarks/>
        public void SendAsync(string username, string password, string srcNumber, string body, string[] destNo, string flash, object userState) {
            if ((this.SendOperationCompleted == null)) {
                this.SendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOperationCompleted);
            }
            this.InvokeAsync("Send", new object[] {
                        username,
                        password,
                        srcNumber,
                        body,
                        destNo,
                        flash}, this.SendOperationCompleted, userState);
        }
        
        private void OnSendOperationCompleted(object arg) {
            if ((this.SendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCompleted(this, new SendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:SMSAPIwsdl#ViewReceive", RequestNamespace="urn:SMSAPIwsdl", ResponseNamespace="urn:SMSAPIwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public ReceiveResult[] ViewReceive(string username, string password, string number, string id) {
            object[] results = this.Invoke("ViewReceive", new object[] {
                        username,
                        password,
                        number,
                        id});
            return ((ReceiveResult[])(results[0]));
        }
        
        /// <remarks/>
        public void ViewReceiveAsync(string username, string password, string number, string id) {
            this.ViewReceiveAsync(username, password, number, id, null);
        }
        
        /// <remarks/>
        public void ViewReceiveAsync(string username, string password, string number, string id, object userState) {
            if ((this.ViewReceiveOperationCompleted == null)) {
                this.ViewReceiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnViewReceiveOperationCompleted);
            }
            this.InvokeAsync("ViewReceive", new object[] {
                        username,
                        password,
                        number,
                        id}, this.ViewReceiveOperationCompleted, userState);
        }
        
        private void OnViewReceiveOperationCompleted(object arg) {
            if ((this.ViewReceiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViewReceiveCompleted(this, new ViewReceiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:SMSAPIwsdl#DeliveryReport", RequestNamespace="urn:SMSAPIwsdl", ResponseNamespace="urn:SMSAPIwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public DeliveryResult[] DeliveryReport(string username, string password, string srcNumber, string id, string fromid) {
            object[] results = this.Invoke("DeliveryReport", new object[] {
                        username,
                        password,
                        srcNumber,
                        id,
                        fromid});
            return ((DeliveryResult[])(results[0]));
        }
        
        /// <remarks/>
        public void DeliveryReportAsync(string username, string password, string srcNumber, string id, string fromid) {
            this.DeliveryReportAsync(username, password, srcNumber, id, fromid, null);
        }
        
        /// <remarks/>
        public void DeliveryReportAsync(string username, string password, string srcNumber, string id, string fromid, object userState) {
            if ((this.DeliveryReportOperationCompleted == null)) {
                this.DeliveryReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeliveryReportOperationCompleted);
            }
            this.InvokeAsync("DeliveryReport", new object[] {
                        username,
                        password,
                        srcNumber,
                        id,
                        fromid}, this.DeliveryReportOperationCompleted, userState);
        }
        
        private void OnDeliveryReportOperationCompleted(object arg) {
            if ((this.DeliveryReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeliveryReportCompleted(this, new DeliveryReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:SMSAPIwsdl#getStatuses", RequestNamespace="urn:SMSAPIwsdl", ResponseNamespace="urn:SMSAPIwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] getStatuses(string username, string password, long[] checkingIds) {
            object[] results = this.Invoke("getStatuses", new object[] {
                        username,
                        password,
                        checkingIds});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getStatusesAsync(string username, string password, long[] checkingIds) {
            this.getStatusesAsync(username, password, checkingIds, null);
        }
        
        /// <remarks/>
        public void getStatusesAsync(string username, string password, long[] checkingIds, object userState) {
            if ((this.getStatusesOperationCompleted == null)) {
                this.getStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusesOperationCompleted);
            }
            this.InvokeAsync("getStatuses", new object[] {
                        username,
                        password,
                        checkingIds}, this.getStatusesOperationCompleted, userState);
        }
        
        private void OngetStatusesOperationCompleted(object arg) {
            if ((this.getStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusesCompleted(this, new getStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:SMSAPIwsdl#Acknowledge", RequestNamespace="urn:SMSAPIwsdl", ResponseNamespace="urn:SMSAPIwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] Acknowledge(string username, string password, long[] checkingIds) {
            object[] results = this.Invoke("Acknowledge", new object[] {
                        username,
                        password,
                        checkingIds});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void AcknowledgeAsync(string username, string password, long[] checkingIds) {
            this.AcknowledgeAsync(username, password, checkingIds, null);
        }
        
        /// <remarks/>
        public void AcknowledgeAsync(string username, string password, long[] checkingIds, object userState) {
            if ((this.AcknowledgeOperationCompleted == null)) {
                this.AcknowledgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcknowledgeOperationCompleted);
            }
            this.InvokeAsync("Acknowledge", new object[] {
                        username,
                        password,
                        checkingIds}, this.AcknowledgeOperationCompleted, userState);
        }
        
        private void OnAcknowledgeOperationCompleted(object arg) {
            if ((this.AcknowledgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcknowledgeCompleted(this, new AcknowledgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:SMSAPIwsdl#getStatuses", RequestNamespace="urn:SMSAPIwsdl", ResponseNamespace="urn:SMSAPIwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] getStatuses_OriginalID(string username, string password, long[] checkingIds) {
            object[] results = this.Invoke("getStatuses_OriginalID", new object[] {
                        username,
                        password,
                        checkingIds});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getStatuses_OriginalIDAsync(string username, string password, long[] checkingIds) {
            this.getStatuses_OriginalIDAsync(username, password, checkingIds, null);
        }
        
        /// <remarks/>
        public void getStatuses_OriginalIDAsync(string username, string password, long[] checkingIds, object userState) {
            if ((this.getStatuses_OriginalIDOperationCompleted == null)) {
                this.getStatuses_OriginalIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatuses_OriginalIDOperationCompleted);
            }
            this.InvokeAsync("getStatuses_OriginalID", new object[] {
                        username,
                        password,
                        checkingIds}, this.getStatuses_OriginalIDOperationCompleted, userState);
        }
        
        private void OngetStatuses_OriginalIDOperationCompleted(object arg) {
            if ((this.getStatuses_OriginalIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatuses_OriginalIDCompleted(this, new getStatuses_OriginalIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:SMSAPIwsdl#return account balance", RequestNamespace="urn:SMSAPIwsdl", ResponseNamespace="urn:SMSAPIwsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Balance(string username, string password) {
            object[] results = this.Invoke("Balance", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BalanceAsync(string username, string password) {
            this.BalanceAsync(username, password, null);
        }
        
        /// <remarks/>
        public void BalanceAsync(string username, string password, object userState) {
            if ((this.BalanceOperationCompleted == null)) {
                this.BalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBalanceOperationCompleted);
            }
            this.InvokeAsync("Balance", new object[] {
                        username,
                        password}, this.BalanceOperationCompleted, userState);
        }
        
        private void OnBalanceOperationCompleted(object arg) {
            if ((this.BalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BalanceCompleted(this, new BalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SMSAPIwsdl")]
    public partial class MultipleSendResult {
        
        private string idField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SMSAPIwsdl")]
    public partial class DeliveryResult {
        
        private string idField;
        
        private string statusField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SMSAPIwsdl")]
    public partial class ReceiveResult {
        
        private string idField;
        
        private string fromField;
        
        private string toField;
        
        private string dateField;
        
        private string bodyField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        public string To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SMSAPIwsdl")]
    public partial class SendResult {
        
        private string idField;
        
        private string mobileField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SendMultipleCompletedEventHandler(object sender, SendMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MultipleSendResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MultipleSendResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SendCompletedEventHandler(object sender, SendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SendResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ViewReceiveCompletedEventHandler(object sender, ViewReceiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViewReceiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViewReceiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReceiveResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReceiveResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeliveryReportCompletedEventHandler(object sender, DeliveryReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeliveryReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeliveryReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeliveryResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeliveryResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getStatusesCompletedEventHandler(object sender, getStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AcknowledgeCompletedEventHandler(object sender, AcknowledgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcknowledgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcknowledgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void getStatuses_OriginalIDCompletedEventHandler(object sender, getStatuses_OriginalIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatuses_OriginalIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatuses_OriginalIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void BalanceCompletedEventHandler(object sender, BalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591