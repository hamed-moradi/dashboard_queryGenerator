@using Presentation.Panel.Models;
@using Presentation.Panel.Helpers;
@using Asset.Infrastructure.Common;

@model AdminViewModel

@{
    ViewBag.Title = "ویرایش مدیر";
    if (Model != null)
    {
        ViewBag.Title = "ویرایش «" + Model.FullName + "»";
    }
}

<section class="content">
    <hr />

    @using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })@Html.HiddenFor(model => model.PreviousUrl)
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.UserName)
            @Html.HiddenFor(model => model.LastLogin)
            @Html.HiddenFor(model => model.Password)
            @Html.HiddenFor(model => model.ConfirmPassword)

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control en dirl", @onclick = "openCustomRoxy('Avatar');" } })
                    @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @{
                        var src = string.IsNullOrWhiteSpace(Model?.Avatar) ? "/Images/no-image.png" : Model.Avatar.Trim();
                        src += "?w=36&h=36&mode=crop";
                    }
                    <img src='@src' data-id="Avatar" width="36" height="36" class="avatar-mini" alt="" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(model => model.Gender, EnumHelper.GetSelectList(typeof(GeneralEnums.Gender)), "یک جنسیت را انتخاب کنید", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(model => model.Status, EnumHelper.GetSelectList(typeof(EditStatus)), "یک وضعیت را انتخاب کنید", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(model => model.RoleId, (SelectList)ViewBag.RolesList, "-- نقش --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="ذخیره تغییرات" class="btn btn-primary" />
                    @if (Model.Id == AdminHelper.AdminId)
                    {
                        @Html.Raw("&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;")
                        @Html.ActionLink("تغییر گذرواژه", "ChangePassword", "Account", null, new { @class = "btn btn-warning" })
                    }
                    @Html.Raw("&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;")
                    @if (string.IsNullOrEmpty(Model.PreviousUrl))
                    {
                        @Html.ActionLink("لیست ادمین ها", "Index", null, new { @class = "btn btn-default" })
                    }
                    else
                    {
                        <a href="@Model.PreviousUrl" class="btn btn-default">لیست مسابقه ها</a>
                    }                </div>
            </div>
        </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</section>