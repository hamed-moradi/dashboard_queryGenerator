@using Presentation.Panel.Models;

@model AppSettingViewModel

@{
    ViewBag.Title = "ویرایش تنظیمات";
}

<section class="content">
    <hr />

    @using (Html.BeginForm("Edit", "AppSetting", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })@Html.HiddenFor(model => model.PreviousUrl)
            @Html.HiddenFor(model=>model.Key)
            

            <div class="form-group">
                @Html.LabelFor(model => model.Key, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    <label class="form-control">@Model.Key</label>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.Value, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 3 })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Icon, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Icon, new { htmlAttributes = new { @class = "form-control en dirl", @onclick = "openCustomRoxy('Icon');" } })
                    @Html.ValidationMessageFor(model => model.Icon, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @{
                        var src = string.IsNullOrWhiteSpace(Model?.Icon) ? "/Images/no-image.png" : Model.Icon.Trim();
                    }
                    <img src='@src' data-id="RelativePath" width="36" height="36" class="avatar-mini" alt="" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.Priority, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="ذخیره تغییرات" class="btn btn-primary" />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    @Html.ActionLink("لیست تنظیمات", "Index", null, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    }
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}