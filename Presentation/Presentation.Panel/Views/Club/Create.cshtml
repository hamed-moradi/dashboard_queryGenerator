@using Presentation.Panel.Models;
@using Asset.Infrastructure.Common;

@model ClubViewModel

@{
    ViewBag.Title = "تعریف کلاب جدید";
}
<section class="content">
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })@Html.HiddenFor(model => model.PreviousUrl)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Abbreviation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Abbreviation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Abbreviation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Thumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Thumbnail, new { htmlAttributes = new { @class = "form-control en dirl", @onclick = "openCustomRoxy('Thumbnail');" } })
                    @Html.ValidationMessageFor(model => model.Thumbnail, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @{
                        var thumb = string.IsNullOrWhiteSpace(Model?.Thumbnail) ? "/Images/no-image.png" : Model.Thumbnail.Trim();
                        thumb += "?w=36&h=36&mode=crop";
                    }
                    <img src='@thumb' data-id="Thumbnail" width="36" height="36" class="avatar-mini" alt="" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control en dirl", @onclick = "openCustomRoxy('Image');" } })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @{
                        var image = string.IsNullOrWhiteSpace(Model?.Image) ? "/Images/no-image.png" : Model.Image.Trim();
                        image += "?w=36&h=36&mode=crop";
                    }
                    <img src='@image' data-id="Image" width="36" height="36" class="avatar-mini" alt="" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EventId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(model => model.EventId, (SelectList)ViewBag.EventsList, "-- رویداد --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EventId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(model => model.Status, EnumHelper.GetSelectList(typeof(ClubStatus)), "یک وضعیت را انتخاب کنید", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="ذخیره مشخصات" class="btn btn-primary" />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    @if (string.IsNullOrEmpty(Model.PreviousUrl))
                    {
                        @Html.ActionLink("لیست کلاب ها", "Index", null, new { @class = "btn btn-default" })
                    }
                    else
                    {
                        <a href="@Model.PreviousUrl" class="btn btn-default">لیست مسابقه ها</a>
                    }
                </div>
            </div>
        </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</section>