@using Presentation.Panel.Models;
@using Asset.Infrastructure.Common;

@model Match2ClubViewModel

@{
    ViewBag.Title = "تعریف کلاب-مسابقه جدید";
    var lstEvents = ViewBag.EventsList as SelectList;
    var selectedItem = Model != null ? lstEvents.FirstOrDefault(i => i.Value == Model.EventId.ToString())?.Text ?? "--- جستجو کنید ---" : "--- جستجو کنید ---";
}
<section class="content">
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })@Html.HiddenFor(model => model.PreviousUrl)

            <div class="form-group">
                @Html.LabelFor(model => model.EventId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownListFor(model => model.EventId, (SelectList)ViewBag.EventsList, "-- رویداد --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EventId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MatchId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    <select id="MatchId" name="MatchId" class="form-control" dir="rtl"></select>
                    @Html.ValidationMessageFor(model => model.MatchId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HomeClubId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    <select id="HomeClubId" name="HomeClubId" class="form-control" dir="rtl"></select>
                    @Html.ValidationMessageFor(model => model.HomeClubId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AwayClubId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    <select id="AwayClubId" name="AwayClubId" class="form-control" dir="rtl"></select>
                    @Html.ValidationMessageFor(model => model.AwayClubId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="ذخیره مشخصات" class="btn btn-primary" />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    @Html.ActionLink("لیست کلاب-مسابقه ها", "Index", null, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    }

</section>
@section cssBegin {
    <link href="~/Styles/select2.min.css" rel="stylesheet" />
    
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/select2.full.min.js"></script>

    <script type="text/javascript">
        if ($('#EventId').val() != null && $('#EventId').val() != '') {
            let eventId = $('#EventId').val();
            FillDropDownsByEventId(parseInt(eventId));
        }

        InitializeObjectDrp('#EventId', '/Event/DropDown', "@selectedItem", "@(Model==null?-1:Model.EventId.GetValueOrDefault(-1))");


        $(function () {$('#EventId').change(function () {
                var selectedItem = $(this).val();
                if (selectedItem != null && selectedItem != '') {
                    FillDropDownsByEventId(selectedItem);
                }
            })
        });

        function FillDropDownsByEventId(eventId) {
            $.ajax({
                url: '/Match/GetMatcheshByEventId',
                type: 'POST',
                dataType: 'json',
                data: { 'eventId': eventId },
                success: function (response) {
                    if (response.status == 200) {
                        if (response.data != null) {
                            $('#MatchId').html('');
                            for (var i = 0; i < response.data.length; i++) {
                                $('#MatchId').append('<option value="' + response.data[i].id + '">' + response.data[i].name + '</option>');
                            }
                        }
                    } else {
                        alert(data.message);
                    }
                },
                error: function (data) {

                }
            });

            $.ajax({
                url: '/Club/GetClubsByEventId',
                type: 'POST',
                dataType: 'json',
                data: { 'eventId': eventId },
                success: function (response) {
                    if (response.status == 200) {
                        if (response.data != null) {
                            $('#HomeClubId').html('');
                            for (var i = 0; i < response.data.length; i++) {
                                $('#HomeClubId').append('<option value="' + response.data[i].id + '">' + response.data[i].name + '</option>');
                            }

                            $('#AwayClubId').html('');
                            for (var i = 0; i < response.data.length; i++) {
                                $('#AwayClubId').append('<option value="' + response.data[i].id + '">' + response.data[i].name + '</option>');
                            }
                        }
                    } else {
                        alert(data.message);
                    }
                },
                error: function (data) {

                }
            });
        }

        function setProperty(element) {
            var propertyId = $(element).attr('data-value');
            //propertyList.splice( $.inArray(removeItem, propertyList), propertyId );
            propertyList = $.grep(propertyList, function (value) {
                return value != propertyId;
            })
            if ($(element).is(":checked")) {
                propertyList.push(propertyId);
            }
            createHtmlModel(propertyList);
        }
        function createHtmlModel(properties) {
            $('#properties').html('');
            for (var i = 0; i < properties.length; i++) {
                var childName = 'Properties[' + i + '].Id';
                $('#properties').append('<input type="hidden" name="' + childName + '" value="' + properties[i] + '" />');
            }
        }
    </script>
}